<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=10">
        <title>Smooth-Div-Scroll/js/jquery-ui-1.10.3.custom.min.js at master Â· tkahn/Smooth-Div-Scroll</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe125-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (0e75de19f8) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="740F980F:7849:C97CB5:527E81C6" name="octolytics-dimension-request_id" /><meta content="5601315" name="octolytics-actor-id" /><meta content="kwtoh" name="octolytics-actor-login" /><meta content="d9a39557b7161f16f52a884c1421aa42dab07bca2e04b685b8608c8fb8bcaa78" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="aLb25ZjgH6yAPSUMoFCcDssvMTCCLEKoEdgmnp3CG6o=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-804556dba6658262abda18880c76c8b30304dcb3.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-3f000d5f6a217f4a3e6bf4941cce685bef6be8f8.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-bca527bb59d94c16d6bf2a759779d7953fa41e76.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-562aef0f367577dc23ee5d12795ac4e31b75e5fa.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="28c852459656e837e136705aa7db0159">

        <link data-pjax-transient rel='permalink' href='/tkahn/Smooth-Div-Scroll/blob/4f5c825dd302c00051b71e1a90633ab4957f5645/js/jquery-ui-1.10.3.custom.min.js'>
  <meta property="og:title" content="Smooth-Div-Scroll"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/tkahn/Smooth-Div-Scroll"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="Smooth-Div-Scroll - A jQuery plugin for smooth scrolling."/>

  <meta name="description" content="Smooth-Div-Scroll - A jQuery plugin for smooth scrolling." />

  <meta content="786084" name="octolytics-dimension-user_id" /><meta content="tkahn" name="octolytics-dimension-user_login" /><meta content="2414080" name="octolytics-dimension-repository_id" /><meta content="tkahn/Smooth-Div-Scroll" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="2414080" name="octolytics-dimension-repository_network_root_id" /><meta content="tkahn/Smooth-Div-Scroll" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/tkahn/Smooth-Div-Scroll/commits/master.atom" rel="alternate" title="Recent Commits to Smooth-Div-Scroll:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public  page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have no unread notifications">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="kwtoh"
      data-repo="tkahn/Smooth-Div-Scroll"
      data-branch="master"
      data-sha="22c577d117588c067a264e5f05bdc5bd1da02747"
  >

    <input type="hidden" name="nwo" value="tkahn/Smooth-Div-Scroll" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/kwtoh" class="name">
        <img height="20" src="https://1.gravatar.com/avatar/41eb67db915f9b1349c39a78f6e275aa?d=https%3A%2F%2Fidenticons.github.com%2Ffd714819329fc20f7a77d5d6a21de6f6.png&amp;r=x&amp;s=140" width="20" /> kwtoh
      </a>
    </li>

      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo" aria-label="Create a new repo">
          <span class="octicon octicon-repo-create"></span>
        </a>
      </li>

      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          aria-label="Account settings "
          title="Account settings ">
          <span class="octicon octicon-tools"></span>
        </a>
      </li>
      <li>
        <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </a>
      </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>



    <li class="section-title">
      <span title="tkahn/Smooth-Div-Scroll">This repository</span>
    </li>
      <li>
        <a href="/tkahn/Smooth-Div-Scroll/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="aLb25ZjgH6yAPSUMoFCcDssvMTCCLEKoEdgmnp3CG6o=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="2414080" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/tkahn/Smooth-Div-Scroll/watchers">
        35
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/tkahn/Smooth-Div-Scroll/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/tkahn/Smooth-Div-Scroll/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/tkahn/Smooth-Div-Scroll/stargazers">
        269
      </a>
  </div>

  </li>


        <li>
          <a href="/tkahn/Smooth-Div-Scroll/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/tkahn/Smooth-Div-Scroll/network" class="social-count">126</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/tkahn" class="url fn" itemprop="url" rel="author"><span itemprop="title">tkahn</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/tkahn/Smooth-Div-Scroll" class="js-current-repository js-repo-home-link">Smooth-Div-Scroll</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/tkahn/Smooth-Div-Scroll" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /tkahn/Smooth-Div-Scroll">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/tkahn/Smooth-Div-Scroll/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /tkahn/Smooth-Div-Scroll/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>41</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/tkahn/Smooth-Div-Scroll/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /tkahn/Smooth-Div-Scroll/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>6</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/tkahn/Smooth-Div-Scroll/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /tkahn/Smooth-Div-Scroll/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/tkahn/Smooth-Div-Scroll/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /tkahn/Smooth-Div-Scroll/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/tkahn/Smooth-Div-Scroll/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /tkahn/Smooth-Div-Scroll/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/tkahn/Smooth-Div-Scroll/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /tkahn/Smooth-Div-Scroll/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/tkahn/Smooth-Div-Scroll.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/tkahn/Smooth-Div-Scroll.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:tkahn/Smooth-Div-Scroll.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:tkahn/Smooth-Div-Scroll.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/tkahn/Smooth-Div-Scroll" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/tkahn/Smooth-Div-Scroll" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/tkahn/Smooth-Div-Scroll" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

              <a href="/tkahn/Smooth-Div-Scroll/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:d9b8a2d5d6d569f1c76c8ffd4658f7ed -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/tkahn/Smooth-Div-Scroll/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/tkahn/Smooth-Div-Scroll/blob/master/js/jquery-ui-1.10.3.custom.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/tkahn/Smooth-Div-Scroll" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">Smooth-Div-Scroll</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/tkahn/Smooth-Div-Scroll/tree/master/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">jquery-ui-1.10.3.custom.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="js/jquery-ui-1.10.3.custom.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>



  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://0.gravatar.com/avatar/620c63f7314a9d8236b63953a5868772?d=https%3A%2F%2Fidenticons.github.com%2F3aa3065735cc8a66a1538258be007a38.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/tkahn" rel="author">tkahn</a></span>
    <time class="js-relative-date" datetime="2013-10-28T03:19:17-07:00" title="2013-10-28 03:19:17">October 28, 2013</time>
    <div class="commit-title">
        <a href="/tkahn/Smooth-Div-Scroll/commit/9638b884edf5136e6fa94f5573424e21414963fd" class="message" data-pjax="true" title="Updated to latest versions of libaries

Updated to jQuery 1.10.2, jQuery UI 1.10.3, jQuery.kinetic 1.8.2 and
jQuery.mousewheel 3.1.4. Restructured the files in the js folder so
there&#39;s a separate folder for source files. Updated the index.html file
to reflect these changes.">Updated to latest versions of libaries</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img height="24" src="https://0.gravatar.com/avatar/620c63f7314a9d8236b63953a5868772?d=https%3A%2F%2Fidenticons.github.com%2F3aa3065735cc8a66a1538258be007a38.png&amp;r=x&amp;s=140" width="24" />
            <a href="/tkahn">tkahn</a>
          </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>6 lines (5 sloc)</span>
        <span>19.38 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards"
               href="github-windows://openRepo/https://github.com/tkahn/Smooth-Div-Scroll?branch=master&amp;filepath=js%2Fjquery-ui-1.10.3.custom.min.js" title="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped upwards"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/tkahn/Smooth-Div-Scroll/edit/master/js/jquery-ui-1.10.3.custom.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/tkahn/Smooth-Div-Scroll/raw/master/js/jquery-ui-1.10.3.custom.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/tkahn/Smooth-Div-Scroll/blame/master/js/jquery-ui-1.10.3.custom.min.js" class="button minibutton ">Blame</a>
          <a href="/tkahn/Smooth-Div-Scroll/commits/master/js/jquery-ui-1.10.3.custom.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/tkahn/Smooth-Div-Scroll/delete/master/js/jquery-ui-1.10.3.custom.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>

            </td>
            <td class="blob-line-code">
                    <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*! jQuery UI - v1.10.3 - 2013-10-28</span></div><div class='line' id='LC2'><span class="cm">* http://jqueryui.com</span></div><div class='line' id='LC3'><span class="cm">* Includes: jquery.ui.widget.js, jquery.ui.effect.js</span></div><div class='line' id='LC4'><span class="cm">* Copyright 2013 jQuery Foundation and other contributors; Licensed MIT */</span></div><div class='line' id='LC5'><br/></div><div class='line' id='LC6'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">cleanData</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">cleanData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">]);</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;remove&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){}</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">{},</span><span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Widget</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">expr</span><span class="p">[</span><span class="s2">&quot;:&quot;</span><span class="p">][</span><span class="nx">n</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="nx">e</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">u</span><span class="p">][</span><span class="nx">i</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">u</span><span class="p">][</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_createWidget</span><span class="o">?</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_createWidget</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">_proto</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">),</span><span class="nx">_childConstructors</span><span class="o">:</span><span class="p">[]}),</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">s</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">h</span><span class="p">.</span><span class="nx">options</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_super</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_superApply</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_super</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_superApply</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_super</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_superApply</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">}}(),</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">)}),</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">h</span><span class="p">,{</span><span class="nx">widgetEventPrefix</span><span class="o">:</span><span class="nx">r</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">widgetEventPrefix</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">l</span><span class="p">,{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">namespace</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">widgetName</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">widgetFullName</span><span class="o">:</span><span class="nx">n</span><span class="p">}),</span><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">_childConstructors</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">namespace</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">widgetName</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">_proto</span><span class="p">)}),</span><span class="k">delete</span> <span class="nx">r</span><span class="p">.</span><span class="nx">_childConstructors</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">_childConstructors</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">bridge</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">o</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">])</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">bridge</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="o">||</span><span class="nx">i</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">r</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">r</span><span class="o">=!</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">r</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="s2">&quot;_&quot;</span><span class="o">!==</span><span class="nx">r</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">s</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">!==</span><span class="nx">t</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">jquery</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">())</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;no such method &#39;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;&#39; for &quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot; widget instance&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;cannot call methods on &quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot; prior to initialization; &quot;</span><span class="o">+</span><span class="s2">&quot;attempted to call method &#39;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">)})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">option</span><span class="p">(</span><span class="nx">r</span><span class="o">||</span><span class="p">{}).</span><span class="nx">_init</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">))}),</span><span class="nx">l</span><span class="p">}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">Widget</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">e</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">_childConstructors</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">widgetName</span><span class="o">:</span><span class="s2">&quot;widget&quot;</span><span class="p">,</span><span class="nx">widgetEventPrefix</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">defaultElement</span><span class="o">:</span><span class="s2">&quot;&lt;div&gt;&quot;</span><span class="p">,</span><span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">disabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">create</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">_createWidget</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">s</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultElement</span><span class="o">||</span><span class="k">this</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">uuid</span><span class="o">=</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="o">=</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetName</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">uuid</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCreateOptions</span><span class="p">(),</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">bindings</span><span class="o">=</span><span class="nx">e</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverable</span><span class="o">=</span><span class="nx">e</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">focusable</span><span class="o">=</span><span class="nx">e</span><span class="p">(),</span><span class="nx">s</span><span class="o">!==</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_on</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,{</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="o">===</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}}),</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">style</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nb">document</span><span class="o">||</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nb">window</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">defaultView</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentWindow</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_create</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_trigger</span><span class="p">(</span><span class="s2">&quot;create&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCreateEventData</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">()},</span><span class="nx">_getCreateOptions</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">_getCreateEventData</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">_create</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">_init</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_destroy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetName</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">widget</span><span class="p">().</span><span class="nx">unbind</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="p">).</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;aria-disabled&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="o">+</span><span class="s2">&quot;-disabled &quot;</span><span class="o">+</span><span class="s2">&quot;ui-state-disabled&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">bindings</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverable</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">focusable</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-focus&quot;</span><span class="p">)},</span><span class="nx">_destroy</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">widget</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">},</span><span class="nx">option</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]]</span><span class="o">||</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">s</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_setOptions</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">_setOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_setOption</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">_setOption</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widget</span><span class="p">().</span><span class="nx">toggleClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetFullName</span><span class="o">+</span><span class="s2">&quot;-disabled ui-state-disabled&quot;</span><span class="p">,</span><span class="o">!!</span><span class="nx">t</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;aria-disabled&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverable</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">focusable</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-focus&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_setOption</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_setOption</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">_on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="s2">&quot;boolean&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">bindings</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bindings</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">widget</span><span class="p">()),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="k">return</span> <span class="nx">i</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">disabled</span><span class="o">!==!</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;ui-state-disabled&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">o</span><span class="o">?</span><span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">:</span><span class="nx">o</span><span class="p">).</span><span class="nx">apply</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">}</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">guid</span><span class="o">++</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(\w+)\s*(.*)$/</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">c</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">delegate</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">h</span><span class="p">)})},</span><span class="nx">_off</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">eventNamespace</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">undelegate</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">_delay</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">).</span><span class="nx">apply</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">t</span><span class="o">||</span><span class="mi">0</span><span class="p">)},</span><span class="nx">_hoverable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverable</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverable</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_on</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">mouseenter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">)},</span><span class="nx">mouseleave</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-hover&quot;</span><span class="p">)}})},</span><span class="nx">_focusable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">focusable</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">focusable</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_on</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">focusin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-state-focus&quot;</span><span class="p">)},</span><span class="nx">focusout</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-state-focus&quot;</span><span class="p">)}})},</span><span class="nx">_trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="o">||</span><span class="p">{},</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetEventPrefix</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">widgetEventPrefix</span><span class="o">+</span><span class="nx">t</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">i</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">],[</span><span class="nx">i</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">())}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">show</span><span class="o">:</span><span class="s2">&quot;fadeIn&quot;</span><span class="p">,</span><span class="nx">hide</span><span class="o">:</span><span class="s2">&quot;fadeOut&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">effect</span><span class="o">:</span><span class="nx">a</span><span class="p">});</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">effect</span><span class="o">||</span><span class="nx">i</span><span class="o">:</span><span class="nx">t</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{},</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">duration</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">r</span><span class="o">=!</span><span class="nx">e</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">delay</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">delay</span><span class="p">),</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">effect</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">](</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">o</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">o</span><span class="p">](</span><span class="nx">a</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">)[</span><span class="nx">t</span><span class="p">](),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">i</span><span class="p">()})}})})(</span><span class="nx">jQuery</span><span class="p">);(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;ui-effects-&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="o">=</span><span class="p">{</span><span class="nx">effect</span><span class="o">:</span><span class="p">{}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="nx">i</span><span class="o">||!</span><span class="nx">t</span><span class="p">.</span><span class="nx">def</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">def</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">floor</span><span class="o">?~~</span><span class="nx">e</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">def</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">mod</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">mod</span><span class="p">)</span><span class="o">%</span><span class="nx">s</span><span class="p">.</span><span class="nx">mod</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">max</span><span class="o">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">max</span><span class="o">:</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">l</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_rgba</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">re</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">space</span><span class="o">||</span><span class="s2">&quot;rgba&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">l</span><span class="p">](</span><span class="nx">h</span><span class="p">),</span><span class="nx">s</span><span class="p">[</span><span class="nx">u</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">cache</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">u</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">cache</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_rgba</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="s2">&quot;0,0,0,0&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">transparent</span><span class="p">),</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">&gt;</span><span class="mi">6</span><span class="o">*</span><span class="nx">i</span><span class="o">?</span><span class="nx">e</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="o">:</span><span class="mi">1</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="mi">2</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">*</span><span class="nx">i</span><span class="o">?</span><span class="nx">e</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor&quot;</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="sr">/^([\-+])=\s*(\d+\.?\d*)/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[{</span><span class="nx">re</span><span class="o">:</span><span class="sr">/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">4</span><span class="p">]]}},{</span><span class="nx">re</span><span class="o">:</span><span class="sr">/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="mf">2.55</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mf">2.55</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mf">2.55</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">4</span><span class="p">]]}},{</span><span class="nx">re</span><span class="o">:</span><span class="sr">/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="mi">16</span><span class="p">)]}},{</span><span class="nx">re</span><span class="o">:</span><span class="sr">/#([a-f0-9])([a-f0-9])([a-f0-9])/</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="mi">16</span><span class="p">)]}},{</span><span class="nx">re</span><span class="o">:</span><span class="sr">/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/</span><span class="p">,</span><span class="nx">space</span><span class="o">:</span><span class="s2">&quot;hsla&quot;</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">4</span><span class="p">]]}}],</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Color</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">e</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="nx">rgba</span><span class="o">:</span><span class="p">{</span><span class="nx">props</span><span class="o">:</span><span class="p">{</span><span class="nx">red</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;byte&quot;</span><span class="p">},</span><span class="nx">green</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;byte&quot;</span><span class="p">},</span><span class="nx">blue</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;byte&quot;</span><span class="p">}}},</span><span class="nx">hsla</span><span class="o">:</span><span class="p">{</span><span class="nx">props</span><span class="o">:</span><span class="p">{</span><span class="nx">hue</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;degrees&quot;</span><span class="p">},</span><span class="nx">saturation</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;percent&quot;</span><span class="p">},</span><span class="nx">lightness</span><span class="o">:</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;percent&quot;</span><span class="p">}}}},</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;byte&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">floor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="mi">255</span><span class="p">},</span><span class="nx">percent</span><span class="o">:</span><span class="p">{</span><span class="nx">max</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">degrees</span><span class="o">:</span><span class="p">{</span><span class="nx">mod</span><span class="o">:</span><span class="mi">360</span><span class="p">,</span><span class="nx">floor</span><span class="o">:!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">support</span><span class="o">=</span><span class="p">{},</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;p&gt;&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;background-color:rgba(1,1,1,.5)&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgba</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;rgba&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="p">{</span><span class="nx">idx</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;percent&quot;</span><span class="p">,</span><span class="nx">def</span><span class="o">:</span><span class="mi">1</span><span class="p">}}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="o">=</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">],</span><span class="k">this</span><span class="p">;(</span><span class="nx">a</span><span class="p">.</span><span class="nx">jquery</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">r</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">h</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;array&quot;</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">_default</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;array&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">rgba</span><span class="p">.</span><span class="nx">props</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">p</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">],</span><span class="nx">t</span><span class="p">)}),</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">l</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">cache</span><span class="p">].</span><span class="nx">slice</span><span class="p">())})</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">cache</span><span class="p">;</span><span class="nx">f</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">props</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">to</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;alpha&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">return</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">to</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">)}</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">t</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">from</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rgba</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">from</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">])))}),</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">cache</span><span class="p">];</span><span class="k">return</span> <span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">to</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">to</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">)</span><span class="o">||</span><span class="p">[],</span><span class="nx">f</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">props</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">?</span><span class="nx">s</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">===</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">:</span><span class="nx">t</span><span class="p">})),</span><span class="nx">s</span><span class="p">}),</span><span class="nx">s</span><span class="p">},</span><span class="nx">_space</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">)}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">pop</span><span class="p">()},</span><span class="nx">transition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_space</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">()</span><span class="o">?</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;transparent&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">cache</span><span class="p">]</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">to</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">cache</span><span class="p">],</span><span class="nx">f</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">props</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">idx</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="kc">null</span><span class="o">!==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="o">:</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">mod</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">u</span><span class="p">.</span><span class="nx">mod</span><span class="o">/</span><span class="mi">2</span><span class="o">?</span><span class="nx">r</span><span class="o">+=</span><span class="nx">u</span><span class="p">.</span><span class="nx">mod</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">u</span><span class="p">.</span><span class="nx">mod</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">-=</span><span class="nx">u</span><span class="p">.</span><span class="nx">mod</span><span class="p">)),</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">((</span><span class="nx">l</span><span class="o">-</span><span class="nx">r</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">)))}),</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">h</span><span class="p">)},</span><span class="nx">blend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">_rgba</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">e</span><span class="p">}))},</span><span class="nx">toRgbaString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="s2">&quot;rgba(&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="s2">&quot;rgb(&quot;</span><span class="p">),</span><span class="nx">t</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">join</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">toHslaString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="s2">&quot;hsla(&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hsla</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">});</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="s2">&quot;hsl(&quot;</span><span class="p">),</span><span class="nx">t</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">join</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">toHexString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">return</span> <span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">~~</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">s</span><span class="p">)),</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">}).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;transparent&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">toRgbaString</span><span class="p">()}}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">parse</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">hsla</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]];</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="mi">255</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="mi">255</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">255</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">o</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">u</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="o">=</span><span class="nx">h</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">s</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="mi">60</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">n</span><span class="p">)</span><span class="o">/</span><span class="nx">l</span><span class="o">+</span><span class="mi">360</span><span class="o">:</span><span class="nx">a</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="mi">60</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="nx">l</span><span class="o">+</span><span class="mi">120</span><span class="o">:</span><span class="mi">60</span><span class="o">*</span><span class="p">(</span><span class="nx">s</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">l</span><span class="o">+</span><span class="mi">240</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">l</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">?</span><span class="nx">l</span><span class="o">/</span><span class="nx">u</span><span class="o">:</span><span class="nx">l</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">-</span><span class="nx">u</span><span class="p">),[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">r</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">r</span><span class="p">]},</span><span class="nx">u</span><span class="p">.</span><span class="nx">hsla</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="k">return</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]];</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="mi">360</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="o">&gt;=</span><span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">+</span><span class="nx">i</span><span class="o">-</span><span class="nx">s</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">r</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">)),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)),</span><span class="nx">n</span><span class="p">]},</span><span class="nx">f</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">props</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cache</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">to</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">from</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">)),</span><span class="nx">s</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">slice</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;array&quot;</span><span class="o">===</span><span class="nx">o</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="nx">s</span><span class="o">:</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="nx">o</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">];</span><span class="kc">null</span><span class="o">==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">]),</span><span class="nx">d</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">)}),</span><span class="nx">u</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">f</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;alpha&quot;</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_hsla</span><span class="o">?</span><span class="s2">&quot;hsla&quot;</span><span class="o">:</span><span class="s2">&quot;rgba&quot;</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">h</span><span class="p">](),</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">idx</span><span class="p">];</span><span class="k">return</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="nx">u</span><span class="o">:</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">empty</span><span class="o">?</span><span class="k">this</span><span class="o">:</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">*</span><span class="p">(</span><span class="s2">&quot;+&quot;</span><span class="o">===</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">))),</span><span class="nx">l</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">idx</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">h</span><span class="p">](</span><span class="nx">l</span><span class="p">)))})})}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">hook</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;transparent&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">)))){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">n</span><span class="o">||</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgba</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">_rgba</span><span class="p">[</span><span class="mi">3</span><span class="p">]){</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;backgroundColor&quot;</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">t</span><span class="p">;(</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">o</span><span class="o">||</span><span class="s2">&quot;transparent&quot;</span><span class="o">===</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">style</span><span class="p">;)</span><span class="k">try</span><span class="p">{</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;backgroundColor&quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">blend</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="s2">&quot;transparent&quot;</span><span class="o">!==</span><span class="nx">o</span><span class="o">?</span><span class="nx">o</span><span class="o">:</span><span class="s2">&quot;_default&quot;</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toRgbaString</span><span class="p">()}</span><span class="k">try</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">colorInit</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">end</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">colorInit</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">set</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">transition</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">end</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">pos</span><span class="p">))}})},</span><span class="nx">l</span><span class="p">.</span><span class="nx">hook</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="p">{</span><span class="nx">expand</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">f</span><span class="p">([</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="s2">&quot;Right&quot;</span><span class="p">,</span><span class="s2">&quot;Bottom&quot;</span><span class="p">,</span><span class="s2">&quot;Left&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">t</span><span class="p">[</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;Color&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">}),</span><span class="nx">t</span><span class="p">}},</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">names</span><span class="o">=</span><span class="p">{</span><span class="nx">aqua</span><span class="o">:</span><span class="s2">&quot;#00ffff&quot;</span><span class="p">,</span><span class="nx">black</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">,</span><span class="nx">blue</span><span class="o">:</span><span class="s2">&quot;#0000ff&quot;</span><span class="p">,</span><span class="nx">fuchsia</span><span class="o">:</span><span class="s2">&quot;#ff00ff&quot;</span><span class="p">,</span><span class="nx">gray</span><span class="o">:</span><span class="s2">&quot;#808080&quot;</span><span class="p">,</span><span class="nx">green</span><span class="o">:</span><span class="s2">&quot;#008000&quot;</span><span class="p">,</span><span class="nx">lime</span><span class="o">:</span><span class="s2">&quot;#00ff00&quot;</span><span class="p">,</span><span class="nx">maroon</span><span class="o">:</span><span class="s2">&quot;#800000&quot;</span><span class="p">,</span><span class="nx">navy</span><span class="o">:</span><span class="s2">&quot;#000080&quot;</span><span class="p">,</span><span class="nx">olive</span><span class="o">:</span><span class="s2">&quot;#808000&quot;</span><span class="p">,</span><span class="nx">purple</span><span class="o">:</span><span class="s2">&quot;#800080&quot;</span><span class="p">,</span><span class="nx">red</span><span class="o">:</span><span class="s2">&quot;#ff0000&quot;</span><span class="p">,</span><span class="nx">silver</span><span class="o">:</span><span class="s2">&quot;#c0c0c0&quot;</span><span class="p">,</span><span class="nx">teal</span><span class="o">:</span><span class="s2">&quot;#008080&quot;</span><span class="p">,</span><span class="nx">white</span><span class="o">:</span><span class="s2">&quot;#ffffff&quot;</span><span class="p">,</span><span class="nx">yellow</span><span class="o">:</span><span class="s2">&quot;#ffff00&quot;</span><span class="p">,</span><span class="nx">transparent</span><span class="o">:</span><span class="p">[</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">_default</span><span class="o">:</span><span class="s2">&quot;#ffffff&quot;</span><span class="p">}}(</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]])</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">;)</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">i</span><span class="p">)]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="nx">n</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">)))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">r</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;remove&quot;</span><span class="p">,</span><span class="s2">&quot;toggle&quot;</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="nx">border</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderBottom</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderLeft</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderRight</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderTop</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;borderLeftStyle&quot;</span><span class="p">,</span><span class="s2">&quot;borderRightStyle&quot;</span><span class="p">,</span><span class="s2">&quot;borderBottomStyle&quot;</span><span class="p">,</span><span class="s2">&quot;borderTopStyle&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){(</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">end</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttr</span><span class="o">||</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">pos</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttr</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">end</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttr</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">addBack</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">addBack</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">e</span><span class="p">))}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">speed</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">addBack</span><span class="p">()</span><span class="o">:</span><span class="nx">r</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">el</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="k">this</span><span class="p">)}}),</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;Class&quot;</span><span class="p">](</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">])})},</span><span class="nx">n</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">diff</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="p">),</span><span class="k">this</span><span class="p">}),</span><span class="nx">r</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">h</span><span class="p">,{</span><span class="nx">queue</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">t</span><span class="p">)}});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">diff</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">promise</span><span class="p">()}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">when</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">()).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">diff</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)})}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">])})})},</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">add</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">addClass</span><span class="p">),</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">remove</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">),</span><span class="nx">toggleClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="nx">n</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="nx">s</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">remove</span><span class="o">:</span><span class="nx">s</span><span class="p">},</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">toggle</span><span class="o">:</span><span class="nx">s</span><span class="p">},</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">),</span><span class="nx">switchClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">animateClass</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">add</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">remove</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">)}})}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">effect</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="p">{</span><span class="nx">effect</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="kc">null</span><span class="o">==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="p">{}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{}),(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">off</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="o">:</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">.</span><span class="nx">_default</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">complete</span><span class="p">,</span><span class="nx">t</span><span class="p">}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">t</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">effect</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">effect</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;1.10.3&quot;</span><span class="p">,</span><span class="nx">save</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!==</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">style</span><span class="p">[</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="p">]])},</span><span class="nx">restore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="kc">null</span><span class="o">!==</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]),</span><span class="nx">a</span><span class="o">===</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">a</span><span class="p">))},</span><span class="nx">setMode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;toggle&quot;</span><span class="o">===</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">),</span><span class="nx">t</span><span class="p">},</span><span class="nx">getBaseline</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="nx">t</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">s</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="nx">t</span><span class="p">.</span><span class="nx">width</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">i</span><span class="p">}},</span><span class="nx">createWrapper</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;.ui-effects-wrapper&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">outerWidth</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;float&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-effects-wrapper&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">,</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;transparent&quot;</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">width</span><span class="p">(),</span><span class="nx">height</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">height</span><span class="p">()},</span><span class="nx">n</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">n</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">}</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">wrap</span><span class="p">(</span><span class="nx">s</span><span class="p">),(</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">n</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">focus</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="s2">&quot;static&quot;</span><span class="o">===</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">}),</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">}))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">i</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">),</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;z-index&quot;</span><span class="p">)}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="mi">10</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">)}),</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">})),</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">show</span><span class="p">()},</span><span class="nx">removeWrapper</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;.ui-effects-wrapper&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">t</span><span class="p">),(</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">i</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">focus</span><span class="p">()),</span><span class="nx">t</span><span class="p">},</span><span class="nx">setTransition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">cssUnit</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])}),</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">effect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">complete</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">mode</span><span class="p">;(</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;hide&quot;</span><span class="o">===</span><span class="nx">o</span><span class="o">:</span><span class="s2">&quot;show&quot;</span><span class="o">===</span><span class="nx">o</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">](),</span><span class="nx">s</span><span class="p">())</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">mode</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">queue</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">effects</span><span class="p">.</span><span class="nx">effect</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">effect</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">off</span><span class="o">||!</span><span class="nx">r</span><span class="o">?</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">i</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">complete</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)})</span><span class="o">:</span><span class="nx">n</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">n</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">effect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">show</span><span class="p">),</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;hide&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">effect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">hide</span><span class="p">),</span><span class="nx">toggle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;toggle&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">effect</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">toggle</span><span class="p">),</span><span class="nx">cssUnit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;em&quot;</span><span class="p">,</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="s2">&quot;%&quot;</span><span class="p">,</span><span class="s2">&quot;pt&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="p">[</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">])}),</span><span class="nx">s</span><span class="p">}})}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;Quad&quot;</span><span class="p">,</span><span class="s2">&quot;Cubic&quot;</span><span class="p">,</span><span class="s2">&quot;Quart&quot;</span><span class="p">,</span><span class="s2">&quot;Quint&quot;</span><span class="p">,</span><span class="s2">&quot;Expo&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">Sine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">)},</span><span class="nx">Circ</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="p">)},</span><span class="nx">Elastic</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">:-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">8</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">((</span><span class="mi">80</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mf">7.5</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">15</span><span class="p">)},</span><span class="nx">Back</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="o">*</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="p">)},</span><span class="nx">Bounce</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">4</span><span class="p">;((</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">--</span><span class="nx">i</span><span class="p">))</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">11</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;);</span><span class="k">return</span> <span class="mi">1</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">-</span><span class="mf">7.5625</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">((</span><span class="mi">3</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">22</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="mi">2</span><span class="p">)}}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="s2">&quot;easeIn&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="s2">&quot;easeOut&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="nx">i</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">e</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="s2">&quot;easeInOut&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">.</span><span class="mi">5</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">i</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="mi">1</span><span class="o">-</span><span class="nx">i</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">}})}()})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.08378s from github-fe125-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/tkahn/Smooth-Div-Scroll/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

